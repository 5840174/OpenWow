#version 440
#extension GL_ARB_explicit_uniform_location : enable

// Input
in struct
{
	vec3 POSITION0;
	vec3 NORMAL0;
	vec2 TEXCOORD0;
} VSInput;

// Output
layout(location = 0) out vec4 color;

// Textures
layout(location = 0) uniform sampler2D DiffuseTexture;

// Uniforms
layout(std140, binding = 1) uniform Material 
{
	uint BlendMode;
	vec3 pad;
};

void main()
{	
	vec4 resultColor = texture(DiffuseTexture, VSInput.TEXCOORD0);
	
	if (BlendMode == 0) // GxBlend_Opaque
	{
		resultColor.a = 1.0f;
	}
	else if (BlendMode == 1) // GxBlend_AlphaKey
	{
		if (resultColor.a < (224.0f / 255.0f)) discard;
	}
	else 
	{
		if (resultColor.a < (1.0f / 255.0f)) discard;
	}
	
	color = resultColor.bgra;
};
